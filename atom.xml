<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>避风港</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2022-05-06T06:42:50.497Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Sympa</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>社区搜索功能</title>
    <link href="http://yoursite.com/2022/05/06/%E7%89%9B%E5%AE%A2%E8%AE%A8%E8%AE%BA%E5%8C%BA%E9%A1%B9%E7%9B%AE/%E7%A4%BE%E5%8C%BA%E6%90%9C%E7%B4%A2%E5%8A%9F%E8%83%BD/"/>
    <id>http://yoursite.com/2022/05/06/%E7%89%9B%E5%AE%A2%E8%AE%A8%E8%AE%BA%E5%8C%BA%E9%A1%B9%E7%9B%AE/%E7%A4%BE%E5%8C%BA%E6%90%9C%E7%B4%A2%E5%8A%9F%E8%83%BD/</id>
    <published>2022-05-06T06:36:32.000Z</published>
    <updated>2022-05-06T06:42:50.497Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><ul><li>搜索服务<ul><li>将帖子保存至Elasticsearch服务器</li><li>从Elasticsearch服务器删除帖子</li><li>从Elasticsearch服务器搜索帖子</li></ul></li><li>发布事件<ul><li>发布帖子时，将帖子异步的提交到Elasiticsearch服务器</li><li>增加评论时，将帖子异步的提交到Elasticsearch服务器</li><li>在消费组件中增加一个方法，消费贴子发布事件</li></ul></li><li>显示结果<ul><li>在控制器中处理搜索请求，在HTML上显示搜索结果</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="牛客讨论区项目" scheme="http://yoursite.com/categories/%E7%89%9B%E5%AE%A2%E8%AE%A8%E8%AE%BA%E5%8C%BA%E9%A1%B9%E7%9B%AE/"/>
    
    
  </entry>
  
  <entry>
    <title>Spring整合Elasticsearch</title>
    <link href="http://yoursite.com/2022/05/05/%E6%A1%86%E6%9E%B6/Spring/Spring%E6%95%B4%E5%90%88Elasticsearch/"/>
    <id>http://yoursite.com/2022/05/05/%E6%A1%86%E6%9E%B6/Spring/Spring%E6%95%B4%E5%90%88Elasticsearch/</id>
    <published>2022-05-05T12:02:23.000Z</published>
    <updated>2022-05-06T06:35:14.354Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><ul><li>引入依赖<ul><li>spring-boot-starter-data-elasticsearch</li></ul></li><li>配置Elasticsearch<ul><li>cluster-name，cluster-nodes</li></ul></li><li>Spring Data Elasticsearch<ul><li>ElasticsearchTemplate</li><li>ElasticsearchRepository</li></ul></li></ul><h4 id="定义Repository接口"><a href="#定义Repository接口" class="headerlink" title="定义Repository接口"></a>定义Repository接口</h4><ul><li>DAO层实现实体类对应的Repository接口，继承于ElasiticsearchRepository，泛型为实体和id类型</li><li>父接口中已经定义好了对es服务器的增删改查方法，不需要自己实现</li></ul><h4 id="测试增删改查方法"><a href="#测试增删改查方法" class="headerlink" title="测试增删改查方法"></a>测试增删改查方法</h4><h5 id="增"><a href="#增" class="headerlink" title="增"></a>增</h5><ul><li>save方法，保存一条</li><li>saveAll，保存多条</li></ul><h5 id="改"><a href="#改" class="headerlink" title="改"></a>改</h5><ul><li>save覆盖即可</li></ul><h5 id="删"><a href="#删" class="headerlink" title="删"></a>删</h5><ul><li>deleteById</li></ul><h5 id="查"><a href="#查" class="headerlink" title="查"></a>查</h5><ul><li>首先构造搜索请求对象SearchRequest，传入索引名</li><li>构造搜索条件SearchSourceBuilder</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//构建搜索条件</span></span><br><span class="line">SearchSourceBuilder searchSourceBuilder = <span class="keyword">new</span> SearchSourceBuilder()</span><br><span class="line">        <span class="comment">//在discusspost索引的title和content字段中都查询“互联网寒冬”</span></span><br><span class="line">        .query(QueryBuilders.multiMatchQuery(<span class="string">"互联网寒冬"</span>, <span class="string">"title"</span>, <span class="string">"content"</span>))</span><br><span class="line">        <span class="comment">// matchQuery是模糊查询，会对key进行分词：searchSourceBuilder.query(QueryBuilders.matchQuery(key,value));</span></span><br><span class="line">        <span class="comment">// termQuery是精准查询：searchSourceBuilder.query(QueryBuilders.termQuery(key,value));</span></span><br><span class="line">        .sort(SortBuilders.fieldSort(<span class="string">"type"</span>).order(SortOrder.DESC))</span><br><span class="line">        .sort(SortBuilders.fieldSort(<span class="string">"score"</span>).order(SortOrder.DESC))</span><br><span class="line">        .sort(SortBuilders.fieldSort(<span class="string">"createTime"</span>).order(SortOrder.DESC))</span><br><span class="line">        <span class="comment">//一个可选项，用于控制允许搜索的时间：searchSourceBuilder.timeout(new TimeValue(60, TimeUnit.SECONDS));</span></span><br><span class="line">        .from(<span class="number">0</span>)<span class="comment">// 指定从哪条开始查询</span></span><br><span class="line">        .size(<span class="number">10</span>);<span class="comment">// 需要查出的总记录条数</span></span><br></pre></td></tr></table></figure><ul><li>调用searchRequest的source方法，将搜索条件传入请求体</li><li>创建应答对象</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SearchResponse searchResponse = restHighLevelClient.search(searchRequest, RequestOptions.DEFAULT);</span><br></pre></td></tr></table></figure><ul><li><p>转换为json格式输出</p></li><li><p>添加高亮</p><ul><li>声明高亮对象</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//高亮</span></span><br><span class="line">HighlightBuilder highlightBuilder = <span class="keyword">new</span> HighlightBuilder();</span><br><span class="line">highlightBuilder.field(<span class="string">"title"</span>);</span><br><span class="line">highlightBuilder.field(<span class="string">"content"</span>);</span><br><span class="line">highlightBuilder.requireFieldMatch(<span class="keyword">false</span>);</span><br><span class="line">highlightBuilder.preTags(<span class="string">"&lt;span style='color:red'&gt;"</span>);</span><br><span class="line">highlightBuilder.postTags(<span class="string">"&lt;/span&gt;"</span>);</span><br></pre></td></tr></table></figure><ul><li>遍历时处理高亮</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 处理高亮显示的结果，获取高亮数据进行进行替换</span></span><br><span class="line"><span class="comment">// 可能有多段匹配，取第一段即可</span></span><br><span class="line">HighlightField titleField = hit.getHighlightFields().get(<span class="string">"title"</span>);</span><br><span class="line"><span class="keyword">if</span> (titleField != <span class="keyword">null</span>) &#123;</span><br><span class="line">    discussPost.setTitle(titleField.getFragments()[<span class="number">0</span>].toString());</span><br><span class="line">&#125;</span><br><span class="line">HighlightField contentField = hit.getHighlightFields().get(<span class="string">"content"</span>);</span><br><span class="line"><span class="keyword">if</span> (contentField != <span class="keyword">null</span>) &#123;</span><br><span class="line">    discussPost.setContent(contentField.getFragments()[<span class="number">0</span>].toString());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="Spring" scheme="http://yoursite.com/categories/Spring/"/>
    
    
      <category term="Elasticsearch" scheme="http://yoursite.com/tags/Elasticsearch/"/>
    
  </entry>
  
  <entry>
    <title>Elasticsearch入门</title>
    <link href="http://yoursite.com/2022/05/05/%E4%B8%AD%E9%97%B4%E4%BB%B6/Elasticsearch%E5%85%A5%E9%97%A8/"/>
    <id>http://yoursite.com/2022/05/05/%E4%B8%AD%E9%97%B4%E4%BB%B6/Elasticsearch%E5%85%A5%E9%97%A8/</id>
    <published>2022-05-05T07:40:10.000Z</published>
    <updated>2022-05-05T12:01:02.044Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><ul><li>Elasticsearch简介<ul><li>一个分布式的，Restful风格的搜索引擎</li><li>支持对各种类型的数据的检索</li><li>搜索速度快，可以提供实时的搜索服务</li><li>便于水平扩展，每秒可以处理PB级海量数据</li></ul></li><li>Elasticsearch术语<ul><li>索引，类型，文档，字段（6.0前对应数据库中：数据库，表，行，列）</li><li>集群，节点，分片，副本</li><li>6.0后废弃类型，索引对应数据库中的表</li><li>集群中每一台服务器称为节点</li><li>一个索引可以拆分为多个分片存储，提高并发能力</li><li>副本是对分片的备份，一个分片可以包含多个副本，提高可用性</li></ul></li></ul><h4 id="Elasticsearch配置（elasticsearch-yml文件）"><a href="#Elasticsearch配置（elasticsearch-yml文件）" class="headerlink" title="Elasticsearch配置（elasticsearch.yml文件）"></a>Elasticsearch配置（elasticsearch.yml文件）</h4><ul><li>集群名：cluster.name</li><li>数据存放路径：path.data</li><li>日志存放路径：path.logs</li></ul><h4 id="安装中文分词插件ik"><a href="#安装中文分词插件ik" class="headerlink" title="安装中文分词插件ik"></a>安装中文分词插件ik</h4><p><a href="https://github.com/medcl/elasticsearch-analysis-ik" target="_blank" rel="noopener">https://github.com/medcl/elasticsearch-analysis-ik</a></p><h4 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h4><ul><li>启动elasticserach</li><li>查看健康状况 curl -X GET “localhost:9200/_cat/health?v”</li><li>查看节点 curl -X GET “localhost:9200/_cat/nodes?v”</li><li>查看索引 curl -X GET “localhost:9200/_cat/indices?v”</li><li>创建索引 curl -X PUT “localhost:9200/{索引名}”，返回json格式</li><li>删除索引 curl -X DELETE “localhost:9200/{索引名}”</li><li>插入数据PUT请求  localhost:9200/{索引名}/{类型}/{id}，提交json格式数据</li><li>查询数据GET请求</li><li>删除数据DELETE请求</li><li>搜索数据GET请求<ul><li>不加条件 localhost:9200/{索引名}/_search</li><li>加条件 localhost:9200/{索引名}/_search?q=xxx:yyy</li><li>会进行分词</li></ul></li><li>搜索条件复杂，通过json提交请求数据</li></ul><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"query"</span>:&#123;</span><br><span class="line">        <span class="attr">"multi_match"</span>:&#123;</span><br><span class="line">            <span class="attr">"query"</span>:<span class="string">"互联网"</span>, <span class="comment">//搜什么</span></span><br><span class="line">            <span class="attr">"fields"</span>:[<span class="string">"title"</span>,<span class="string">"content"</span>]  <span class="comment">//从哪匹配</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="中间件" scheme="http://yoursite.com/categories/%E4%B8%AD%E9%97%B4%E4%BB%B6/"/>
    
    
  </entry>
  
  <entry>
    <title>系统通知</title>
    <link href="http://yoursite.com/2022/04/29/%E7%89%9B%E5%AE%A2%E8%AE%A8%E8%AE%BA%E5%8C%BA%E9%A1%B9%E7%9B%AE/%E7%B3%BB%E7%BB%9F%E9%80%9A%E7%9F%A5/"/>
    <id>http://yoursite.com/2022/04/29/%E7%89%9B%E5%AE%A2%E8%AE%A8%E8%AE%BA%E5%8C%BA%E9%A1%B9%E7%9B%AE/%E7%B3%BB%E7%BB%9F%E9%80%9A%E7%9F%A5/</id>
    <published>2022-04-29T09:03:11.000Z</published>
    <updated>2022-05-04T08:48:30.702Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><ul><li>通知列表<ul><li>显示评论、点赞、关注三种类型的通知</li></ul></li><li>通知详情<ul><li>分页显示某一类主题所包含的通知</li></ul></li><li>未读消息<ul><li>在页面头部显示所有的消息数量</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="牛客讨论区项目" scheme="http://yoursite.com/categories/%E7%89%9B%E5%AE%A2%E8%AE%A8%E8%AE%BA%E5%8C%BA%E9%A1%B9%E7%9B%AE/"/>
    
    
  </entry>
  
  <entry>
    <title>Spring整合Kafka</title>
    <link href="http://yoursite.com/2022/04/22/%E6%A1%86%E6%9E%B6/%E9%98%BB%E5%A1%9E%E9%98%9F%E5%88%97&amp;Kafka/Spring%E6%95%B4%E5%90%88Kafka/"/>
    <id>http://yoursite.com/2022/04/22/%E6%A1%86%E6%9E%B6/%E9%98%BB%E5%A1%9E%E9%98%9F%E5%88%97&amp;Kafka/Spring%E6%95%B4%E5%90%88Kafka/</id>
    <published>2022-04-22T14:05:17.000Z</published>
    <updated>2022-04-22T15:30:47.056Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><ul><li><p>引入依赖</p><ul><li>spring-kafka</li></ul></li><li><p>配置Kafka</p><ul><li>配置server，consumer</li></ul></li><li><p>访问Kafka</p><ul><li>生产者：kafkaTemplate.send(topic, data);</li><li>消费者：</li></ul><p>​       @KafkaListener(topics = {“test”})</p><p>​        public void handleMessage(ConsumerRecord record)  {}</p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="阻塞队列&amp;Kafka" scheme="http://yoursite.com/categories/%E9%98%BB%E5%A1%9E%E9%98%9F%E5%88%97-Kafka/"/>
    
    
  </entry>
  
  <entry>
    <title>Kafka入门</title>
    <link href="http://yoursite.com/2022/04/22/%E6%A1%86%E6%9E%B6/%E9%98%BB%E5%A1%9E%E9%98%9F%E5%88%97&amp;Kafka/Kafka%E5%85%A5%E9%97%A8/"/>
    <id>http://yoursite.com/2022/04/22/%E6%A1%86%E6%9E%B6/%E9%98%BB%E5%A1%9E%E9%98%9F%E5%88%97&amp;Kafka/Kafka%E5%85%A5%E9%97%A8/</id>
    <published>2022-04-22T12:36:33.000Z</published>
    <updated>2022-04-22T14:05:01.299Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><ul><li>Kafka简介<ul><li>Kafka是一个分布式的流媒体平台</li><li>应用：消息系统，日志收集，用户行为追踪，流式处理</li></ul></li><li>Kafka特点<ul><li>高吞吐量，消息持久化，高可用性，高扩展性</li></ul></li><li>Kafka术语<ul><li>Broker，Zookeeper</li><li>Topic，Partition，Offset</li><li>Leader Replica，Follower Replica</li></ul></li></ul><div class="table-container"><table><thead><tr><th>术语</th><th>解释</th></tr></thead><tbody><tr><td>Broker</td><td>Kafka的服务器，一个服务器称为一个Broker</td></tr><tr><td>Zookeeper</td><td>管理集群工具</td></tr><tr><td>Topic</td><td>主题，用来存放消息的位置</td></tr><tr><td>Partition</td><td>分区，对主题位置的分区</td></tr><tr><td>Offset</td><td>消息在分区内存放的索引序列</td></tr><tr><td>Replica</td><td>副本</td></tr><tr><td>Leader Replica</td><td>主副本，获取数据时处理请求</td></tr><tr><td>Follower Replica</td><td>从副本，只负责备份，不负责响应，主副本失效时会从中随机选择一个替代</td></tr><tr><td></td></tr></tbody></table></div><h4 id="Kafka官方网址"><a href="#Kafka官方网址" class="headerlink" title="Kafka官方网址"></a>Kafka官方网址</h4><p><a href="https://kafka.apache.org/" target="_blank" rel="noopener">https://kafka.apache.org/</a></p><h4 id="配置Kafka"><a href="#配置Kafka" class="headerlink" title="配置Kafka"></a>配置Kafka</h4><ul><li>配置文件zookeeper.properties<ul><li>dataDir：数据存放路径，默认为Linux系统路径</li></ul></li><li>配置文件server.properties<ul><li>log.dirs：日志文件存放路径，默认为Linux系统路径</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="阻塞队列&amp;Kafka" scheme="http://yoursite.com/categories/%E9%98%BB%E5%A1%9E%E9%98%9F%E5%88%97-Kafka/"/>
    
    
  </entry>
  
  <entry>
    <title>阻塞队列</title>
    <link href="http://yoursite.com/2022/04/22/%E6%A1%86%E6%9E%B6/%E9%98%BB%E5%A1%9E%E9%98%9F%E5%88%97&amp;Kafka/%E9%98%BB%E5%A1%9E%E9%98%9F%E5%88%97/"/>
    <id>http://yoursite.com/2022/04/22/%E6%A1%86%E6%9E%B6/%E9%98%BB%E5%A1%9E%E9%98%9F%E5%88%97&amp;Kafka/%E9%98%BB%E5%A1%9E%E9%98%9F%E5%88%97/</id>
    <published>2022-04-22T10:32:12.000Z</published>
    <updated>2022-04-22T14:05:10.613Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><ul><li>BlockingQueue<ul><li>解决线程通信的问题</li><li>阻塞方法：put，take</li></ul></li><li>生产者消费者模式<ul><li>生产者：产生数据的线程</li><li>消费者：使用数据的线程</li></ul></li><li>实现类<ul><li>ArrayBlockingQueue</li><li>LinkedBlockingQueue</li><li>PriorityBlockingQueue，SynchronousQueue，DelayQueue等</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="阻塞队列&amp;Kafka" scheme="http://yoursite.com/categories/%E9%98%BB%E5%A1%9E%E9%98%9F%E5%88%97-Kafka/"/>
    
    
  </entry>
  
  <entry>
    <title>登录模块优化</title>
    <link href="http://yoursite.com/2022/04/22/%E7%89%9B%E5%AE%A2%E8%AE%A8%E8%AE%BA%E5%8C%BA%E9%A1%B9%E7%9B%AE/%E7%99%BB%E5%BD%95%E6%A8%A1%E5%9D%97%E4%BC%98%E5%8C%96/"/>
    <id>http://yoursite.com/2022/04/22/%E7%89%9B%E5%AE%A2%E8%AE%A8%E8%AE%BA%E5%8C%BA%E9%A1%B9%E7%9B%AE/%E7%99%BB%E5%BD%95%E6%A8%A1%E5%9D%97%E4%BC%98%E5%8C%96/</id>
    <published>2022-04-22T07:28:31.000Z</published>
    <updated>2022-04-22T07:32:32.186Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><ul><li>使用Redis存储验证码<ul><li>验证码需要频繁的访问与刷新，对性能要求较高</li><li>验证码不需永久保存，通常在很短时间后失效</li><li>分布式部署时，存在Session共享的问题</li></ul></li><li>使用Redis存储登陆凭证<ul><li>处理每次请求时，都要查询用户的登陆凭证，访问的频率非常高</li></ul></li><li>使用Redis缓存登录用户信息<ul><li>处理每次请求时，都要根据凭证查询用户信息，访问的频率非常高</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="牛客讨论区项目" scheme="http://yoursite.com/categories/%E7%89%9B%E5%AE%A2%E8%AE%A8%E8%AE%BA%E5%8C%BA%E9%A1%B9%E7%9B%AE/"/>
    
    
  </entry>
  
  <entry>
    <title>关注与粉丝</title>
    <link href="http://yoursite.com/2022/04/21/%E7%89%9B%E5%AE%A2%E8%AE%A8%E8%AE%BA%E5%8C%BA%E9%A1%B9%E7%9B%AE/%E5%85%B3%E6%B3%A8%E4%B8%8E%E7%B2%89%E4%B8%9D/"/>
    <id>http://yoursite.com/2022/04/21/%E7%89%9B%E5%AE%A2%E8%AE%A8%E8%AE%BA%E5%8C%BA%E9%A1%B9%E7%9B%AE/%E5%85%B3%E6%B3%A8%E4%B8%8E%E7%B2%89%E4%B8%9D/</id>
    <published>2022-04-21T10:47:13.000Z</published>
    <updated>2022-04-21T10:54:50.576Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="牛客讨论区项目" scheme="http://yoursite.com/categories/%E7%89%9B%E5%AE%A2%E8%AE%A8%E8%AE%BA%E5%8C%BA%E9%A1%B9%E7%9B%AE/"/>
    
    
  </entry>
  
  <entry>
    <title>点赞功能</title>
    <link href="http://yoursite.com/2022/04/16/%E7%89%9B%E5%AE%A2%E8%AE%A8%E8%AE%BA%E5%8C%BA%E9%A1%B9%E7%9B%AE/%E7%82%B9%E8%B5%9E%E5%8A%9F%E8%83%BD/"/>
    <id>http://yoursite.com/2022/04/16/%E7%89%9B%E5%AE%A2%E8%AE%A8%E8%AE%BA%E5%8C%BA%E9%A1%B9%E7%9B%AE/%E7%82%B9%E8%B5%9E%E5%8A%9F%E8%83%BD/</id>
    <published>2022-04-16T05:06:11.000Z</published>
    <updated>2022-04-18T05:06:12.444Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><ul><li>点赞<ul><li>支持对帖子、评论点赞</li><li>第1次点赞，第2次取消点赞</li></ul></li><li>首页点赞数量<ul><li>统计帖子点赞数量</li></ul></li><li>详情页点赞数量<ul><li>统计点赞数量</li><li>显示点赞状态</li></ul></li></ul><h4 id="Service层"><a href="#Service层" class="headerlink" title="Service层"></a>Service层</h4><ul><li>点赞功能<ul><li>使用Redis在SpringBoot中的事务管理</li><li>对某实体与用户的赞的增加与删除</li></ul></li><li>查询实体点赞数量</li><li>查询某人对某实体的点赞状态</li><li>查询某个用户获得的赞数量</li></ul><h4 id="Controller层"><a href="#Controller层" class="headerlink" title="Controller层"></a>Controller层</h4><ul><li>HomeController中帖子列表增加点赞数显示</li><li>DiscussPostController中帖子与评论的点赞数显示</li><li>LikeController，使用AJAX异步，实现点赞数的动态修改</li></ul><h4 id="我收到的赞"><a href="#我收到的赞" class="headerlink" title="我收到的赞"></a>我收到的赞</h4><ul><li>个人信息页面显示</li><li>到redis查询用户收到的赞的数量</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="牛客讨论区项目" scheme="http://yoursite.com/categories/%E7%89%9B%E5%AE%A2%E8%AE%A8%E8%AE%BA%E5%8C%BA%E9%A1%B9%E7%9B%AE/"/>
    
    
  </entry>
  
  <entry>
    <title>Spring整合Redis</title>
    <link href="http://yoursite.com/2022/04/12/%E6%A1%86%E6%9E%B6/Spring/Spring%E6%95%B4%E5%90%88Redis/"/>
    <id>http://yoursite.com/2022/04/12/%E6%A1%86%E6%9E%B6/Spring/Spring%E6%95%B4%E5%90%88Redis/</id>
    <published>2022-04-12T07:46:32.000Z</published>
    <updated>2022-05-05T12:06:58.265Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><ul><li>引入依赖<ul><li>spring-boot-starter-data-redis</li></ul></li><li>配置Redis<ul><li>配置数据库参数</li><li>编写配置类，构造RedisTemplate</li></ul></li><li>访问Redis</li></ul><h4 id="配置redisTemplate"><a href="#配置redisTemplate" class="headerlink" title="配置redisTemplate"></a>配置redisTemplate</h4><ul><li>为什么要配置<ul><li>默认是<Object, object>键值对，重新设置序列化方式</Object,></li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> RedisTemplate&lt;String, Object&gt; <span class="title">redisTemplate</span><span class="params">(RedisConnectionFactory factory)</span> </span>&#123;</span><br><span class="line">        RedisTemplate&lt;String, Object&gt; template = <span class="keyword">new</span> RedisTemplate&lt;&gt;();</span><br><span class="line">        template.setConnectionFactory(factory);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//设置key的序列化方式</span></span><br><span class="line">        template.setKeySerializer(RedisSerializer.string());</span><br><span class="line">        <span class="comment">//设置普通value序列化方式</span></span><br><span class="line">        template.setValueSerializer(RedisSerializer.json());</span><br><span class="line">        <span class="comment">//设置hash的key的序列化方式</span></span><br><span class="line">        template.setHashKeySerializer(RedisSerializer.string());</span><br><span class="line">        <span class="comment">//设置hash的value的序列化方式</span></span><br><span class="line">        template.setHashValueSerializer(RedisSerializer.json());</span><br><span class="line"></span><br><span class="line">        template.afterPropertiesSet();</span><br><span class="line">        <span class="keyword">return</span> template;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h4 id="访问Redis"><a href="#访问Redis" class="headerlink" title="访问Redis"></a>访问Redis</h4><ul><li>访问不同key<ul><li>redisTemplate.opsForValue()</li><li>redisTemplate.opsForHash()</li><li>redisTemplate.opsForList()</li><li>redisTemplate.opsForSet()</li><li>redisTemplate.opsForZSet()</li></ul></li><li>处理key<ul><li>删除：redisTemplate.delete()</li><li>查询是否存在：redisTemplate.hasKey()</li><li>设置有效时间：redisTemplate.expire(key, time, 时间单位(TimeUnit.SECONDS))</li></ul></li><li>多次访问同一个key，绑定key<ul><li>BoundValueOperations operations = redisTemplate.boundValueOps(redisKey)</li></ul></li></ul><h4 id="Redis事务管理"><a href="#Redis事务管理" class="headerlink" title="Redis事务管理"></a>Redis事务管理</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//编程式事务</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testTransactional</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Object obj = redisTemplate.execute(<span class="keyword">new</span> SessionCallback() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Object <span class="title">execute</span><span class="params">(RedisOperations operations)</span> <span class="keyword">throws</span> DataAccessException </span>&#123;</span><br><span class="line">            String redisKey = <span class="string">"test:tx"</span>;</span><br><span class="line"></span><br><span class="line">            operations.multi(); <span class="comment">//开启事务</span></span><br><span class="line"></span><br><span class="line">            operations.opsForSet().add(redisKey, <span class="string">"zhangsan"</span>);</span><br><span class="line">            operations.opsForSet().add(redisKey, <span class="string">"lisi"</span>);</span><br><span class="line">            operations.opsForSet().add(redisKey, <span class="string">"wangwu"</span>);</span><br><span class="line"></span><br><span class="line">            System.out.println(operations.opsForSet().members(redisKey));</span><br><span class="line">            <span class="keyword">return</span> operations.exec(); <span class="comment">//提交事务</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    System.out.println(obj);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="Spring" scheme="http://yoursite.com/categories/Spring/"/>
    
    
      <category term="Redis" scheme="http://yoursite.com/tags/Redis/"/>
    
  </entry>
  
  <entry>
    <title>统一记录日志</title>
    <link href="http://yoursite.com/2022/04/10/%E7%89%9B%E5%AE%A2%E8%AE%A8%E8%AE%BA%E5%8C%BA%E9%A1%B9%E7%9B%AE/%E7%BB%9F%E4%B8%80%E8%AE%B0%E5%BD%95%E6%97%A5%E5%BF%97/"/>
    <id>http://yoursite.com/2022/04/10/%E7%89%9B%E5%AE%A2%E8%AE%A8%E8%AE%BA%E5%8C%BA%E9%A1%B9%E7%9B%AE/%E7%BB%9F%E4%B8%80%E8%AE%B0%E5%BD%95%E6%97%A5%E5%BF%97/</id>
    <published>2022-04-10T08:38:32.000Z</published>
    <updated>2022-04-11T11:52:38.557Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="AOP的实现"><a href="#AOP的实现" class="headerlink" title="AOP的实现"></a>AOP的实现</h3><ul><li>AspectJ<ul><li>语言级的实现，扩展了Java语言，定义了AOP语法</li><li>在编译期织入代码，它有一个专门的编译器，用来生成遵守Java字节码规范的class文件</li></ul></li><li>Spring AOP<ul><li>Spring AOP使用Java实现，不需要专门的编译过程，也不需要特殊的类加载器</li><li>Spring AOP在运行时通过代理的方式织入代码，只支持方法类型的连接点</li><li>支持对AspectJ的集成</li></ul></li></ul><h4 id="Spring-AOP"><a href="#Spring-AOP" class="headerlink" title="Spring AOP"></a>Spring AOP</h4><ul><li>JDK动态代理<ul><li>Java提供的动态代理技术，可以在运行时创建接口的代理实例</li><li>Spring AOP默认采用此种方式，在接口的代理实例中织入代码</li></ul></li><li>CGLib动态代理<ul><li>采用底层的字节码技术，在运行时创建子类代理实例</li><li>当目标对象不存在接口时，Spring AOP会采用此种方式，在子类中织入代码</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="牛客讨论区项目" scheme="http://yoursite.com/categories/%E7%89%9B%E5%AE%A2%E8%AE%A8%E8%AE%BA%E5%8C%BA%E9%A1%B9%E7%9B%AE/"/>
    
    
      <category term="AOP" scheme="http://yoursite.com/tags/AOP/"/>
    
  </entry>
  
  <entry>
    <title>统一处理异常</title>
    <link href="http://yoursite.com/2022/04/10/%E7%89%9B%E5%AE%A2%E8%AE%A8%E8%AE%BA%E5%8C%BA%E9%A1%B9%E7%9B%AE/%E7%BB%9F%E4%B8%80%E5%A4%84%E7%90%86%E5%BC%82%E5%B8%B8/"/>
    <id>http://yoursite.com/2022/04/10/%E7%89%9B%E5%AE%A2%E8%AE%A8%E8%AE%BA%E5%8C%BA%E9%A1%B9%E7%9B%AE/%E7%BB%9F%E4%B8%80%E5%A4%84%E7%90%86%E5%BC%82%E5%B8%B8/</id>
    <published>2022-04-10T04:20:32.000Z</published>
    <updated>2022-04-10T08:24:10.582Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><ul><li>@ControllerAdvice<ul><li>用于修饰类，表示该类是Controller的全局配置类</li><li>在此类中，可以对Controller进行如下三种全局配置：<ul><li>异常处理方案</li><li>绑定数据方案</li><li>绑定参数方案</li></ul></li></ul></li><li>@ExceptionHandler<ul><li>用于修饰方法，该方法会在Controller出现异常后被调用，用于处理捕获到的异常</li></ul></li><li>@ModelAttribute<ul><li>用于修饰方法，该方法会在Controller方法执行前被调用，用于为Model对象绑定参数</li></ul></li><li>@DataBinder<ul><li>用于修饰方法，该方法会在Controller方法执行前被调用，用于绑定参数的转换器</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="牛客讨论区项目" scheme="http://yoursite.com/categories/%E7%89%9B%E5%AE%A2%E8%AE%A8%E8%AE%BA%E5%8C%BA%E9%A1%B9%E7%9B%AE/"/>
    
    
  </entry>
  
  <entry>
    <title>私信列表相关</title>
    <link href="http://yoursite.com/2022/04/03/%E7%89%9B%E5%AE%A2%E8%AE%A8%E8%AE%BA%E5%8C%BA%E9%A1%B9%E7%9B%AE/%E7%A7%81%E4%BF%A1%E5%88%97%E8%A1%A8%E7%9B%B8%E5%85%B3/"/>
    <id>http://yoursite.com/2022/04/03/%E7%89%9B%E5%AE%A2%E8%AE%A8%E8%AE%BA%E5%8C%BA%E9%A1%B9%E7%9B%AE/%E7%A7%81%E4%BF%A1%E5%88%97%E8%A1%A8%E7%9B%B8%E5%85%B3/</id>
    <published>2022-04-03T02:52:00.000Z</published>
    <updated>2022-04-03T05:46:44.576Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><ul><li>私信列表<ul><li>查询当前用户会话列表，每个会话只显示最新私信</li><li>支持分页</li></ul></li><li>私信详情<ul><li>查询某个会话所包含的私信</li><li>支持分页</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="牛客讨论区项目" scheme="http://yoursite.com/categories/%E7%89%9B%E5%AE%A2%E8%AE%A8%E8%AE%BA%E5%8C%BA%E9%A1%B9%E7%9B%AE/"/>
    
    
  </entry>
  
  <entry>
    <title>评论相关模块</title>
    <link href="http://yoursite.com/2022/04/01/%E7%89%9B%E5%AE%A2%E8%AE%A8%E8%AE%BA%E5%8C%BA%E9%A1%B9%E7%9B%AE/%E8%AF%84%E8%AE%BA%E7%9B%B8%E5%85%B3%E6%A8%A1%E5%9D%97/"/>
    <id>http://yoursite.com/2022/04/01/%E7%89%9B%E5%AE%A2%E8%AE%A8%E8%AE%BA%E5%8C%BA%E9%A1%B9%E7%9B%AE/%E8%AF%84%E8%AE%BA%E7%9B%B8%E5%85%B3%E6%A8%A1%E5%9D%97/</id>
    <published>2022-04-01T06:37:23.000Z</published>
    <updated>2022-04-03T02:28:17.126Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h4 id="显示评论"><a href="#显示评论" class="headerlink" title="显示评论"></a>显示评论</h4><ul><li>数据层<ul><li>根据实体查询一页评论数据</li><li>根据实体查询评论的数量</li></ul></li><li>业务层<ul><li>处理查询评论的业务</li><li>处理查询评论数量的业务</li></ul></li><li>表现层<ul><li>显示帖子详情数据时，同时显示该帖子所有评论数据</li></ul></li></ul><h5 id="注意点"><a href="#注意点" class="headerlink" title="注意点"></a>注意点</h5><ul><li>由于评论也有回复，所以Controller层返回的List是两层嵌套的</li><li>注意判断回复的性质，是给帖子的还是给评论的</li><li>前端渲染方面：<ul><li>rvo，cvo遍历链表</li><li>cvoStat.count，获取当前遍历的下表</li><li>分页可以复用主页的</li></ul></li></ul><h4 id="增加评论"><a href="#增加评论" class="headerlink" title="增加评论"></a>增加评论</h4><ul><li>数据层<ul><li>增加评论数据</li><li>修改帖子评论数量</li></ul></li><li>业务层<ul><li>处理添加评论业务<ul><li>增加评论</li><li>更新评论数量</li></ul></li></ul></li><li>表现层<ul><li>处理添加评论数据的请求</li><li>设置添加评论的表单</li></ul></li></ul><h5 id="业务层需要事务管理"><a href="#业务层需要事务管理" class="headerlink" title="业务层需要事务管理"></a>业务层需要事务管理</h5><ul><li>因为增加评论和更新评论数量这两步是原子的</li><li>隔离级别与传播机制分别为READ_COMMITTED与REQUIRED</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="牛客讨论区项目" scheme="http://yoursite.com/categories/%E7%89%9B%E5%AE%A2%E8%AE%A8%E8%AE%BA%E5%8C%BA%E9%A1%B9%E7%9B%AE/"/>
    
    
  </entry>
  
  <entry>
    <title>Spring事务管理</title>
    <link href="http://yoursite.com/2022/03/31/%E6%A1%86%E6%9E%B6/Spring/Spring%E4%BA%8B%E5%8A%A1%E7%AE%A1%E7%90%86/"/>
    <id>http://yoursite.com/2022/03/31/%E6%A1%86%E6%9E%B6/Spring/Spring%E4%BA%8B%E5%8A%A1%E7%AE%A1%E7%90%86/</id>
    <published>2022-03-31T13:09:13.000Z</published>
    <updated>2022-04-01T05:01:56.846Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><ul><li>声明式事务<ul><li>通过XML配置，声明某方法的事务特征</li><li>通过注解，声明某方法的事务特征</li></ul></li><li>编程式事务<ul><li>通过TransactionTemplate管理事务，并通过它执行数据库操作</li></ul></li></ul><h4 id="Transactional注解"><a href="#Transactional注解" class="headerlink" title="@Transactional注解"></a>@Transactional注解</h4><ul><li>isolation：事务隔离级别</li><li>propagation：事务传播机制<ul><li>REQUIRED：支持当前事务（外部事务），如果不存在则创建新事物</li><li>REQUIRES_NEW：创建一个新事务，并且暂停当前事务</li><li>NESTED：如果当前存在事务，则嵌套在该事务中执行，否则同REQUIRED</li></ul></li></ul><h4 id="TransactionTemplate类"><a href="#TransactionTemplate类" class="headerlink" title="TransactionTemplate类"></a>TransactionTemplate类</h4><ul><li>.setIsolationLevel(TransactionDefinition.)：设置隔离级别</li><li>.setPropagationBehavior(TransactionDefinition.)：设置传播机制</li><li>.execute(new TransactionCallback<Object>())：提交事务，实现接口的doInTransaction方法</Object></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="框架" scheme="http://yoursite.com/categories/%E6%A1%86%E6%9E%B6/"/>
    
      <category term="Spring" scheme="http://yoursite.com/categories/%E6%A1%86%E6%9E%B6/Spring/"/>
    
    
  </entry>
  
  <entry>
    <title>敏感词过滤</title>
    <link href="http://yoursite.com/2022/03/29/%E7%89%9B%E5%AE%A2%E8%AE%A8%E8%AE%BA%E5%8C%BA%E9%A1%B9%E7%9B%AE/%E6%95%8F%E6%84%9F%E8%AF%8D%E8%BF%87%E6%BB%A4/"/>
    <id>http://yoursite.com/2022/03/29/%E7%89%9B%E5%AE%A2%E8%AE%A8%E8%AE%BA%E5%8C%BA%E9%A1%B9%E7%9B%AE/%E6%95%8F%E6%84%9F%E8%AF%8D%E8%BF%87%E6%BB%A4/</id>
    <published>2022-03-29T06:55:12.000Z</published>
    <updated>2022-03-30T11:42:29.731Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h4 id="简单的敏感词过滤器"><a href="#简单的敏感词过滤器" class="headerlink" title="简单的敏感词过滤器"></a>简单的敏感词过滤器</h4><ul><li>定义字典树</li><li>根据敏感词文件初始化字典树</li><li>编写敏感词过滤的方法</li></ul><h4 id="一些技巧"><a href="#一些技巧" class="headerlink" title="一些技巧"></a>一些技巧</h4><ul><li>判断特殊符号</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">isSymbol</span><span class="params">(Character c)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> !CharUtils.isAsciiAlphanumeric(c) &amp;&amp; (c &lt; <span class="number">0x2E80</span> || c &gt; <span class="number">0x9FFF</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>获取文件缓冲流</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">InputStream is = <span class="keyword">this</span>.getClass().getClassLoader().getResourceAsStream(<span class="string">"sensitive-words.txt"</span>);</span><br><span class="line">BufferedReader reader = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(is));</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="牛客讨论区项目" scheme="http://yoursite.com/categories/%E7%89%9B%E5%AE%A2%E8%AE%A8%E8%AE%BA%E5%8C%BA%E9%A1%B9%E7%9B%AE/"/>
    
    
  </entry>
  
  <entry>
    <title>Interceptor拦截器</title>
    <link href="http://yoursite.com/2022/03/26/%E6%A1%86%E6%9E%B6/Spring/Interceptor%E6%8B%A6%E6%88%AA%E5%99%A8/"/>
    <id>http://yoursite.com/2022/03/26/%E6%A1%86%E6%9E%B6/Spring/Interceptor%E6%8B%A6%E6%88%AA%E5%99%A8/</id>
    <published>2022-03-26T12:36:09.000Z</published>
    <updated>2022-03-27T05:03:20.891Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h4 id="如何创建拦截器？"><a href="#如何创建拦截器？" class="headerlink" title="如何创建拦截器？"></a>如何创建拦截器？</h4><ul><li>在Controller层实现HandlerInterceptor接口</li><li>有三个可实现的方法<ul><li>preHandle方法，在Controller之前执行</li><li>postHandle方法，在调用Controller之后执行</li><li>afterCompletion方法，在模板引擎TemplateEngine之后执行</li></ul></li></ul><h4 id="如何使用拦截器？"><a href="#如何使用拦截器？" class="headerlink" title="如何使用拦截器？"></a>如何使用拦截器？</h4><ul><li>继承WebMvcConfigurer类，实现addInterceptors方法</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WebMvcConfig</span> <span class="keyword">implements</span> <span class="title">WebMvcConfigurer</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> AlphaInterceptor alphaInterceptor;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addInterceptors</span><span class="params">(InterceptorRegistry registry)</span> </span>&#123;</span><br><span class="line">        registry.addInterceptor(alphaInterceptor)</span><br><span class="line">                .excludePathPatterns(<span class="string">"/**/*.css"</span>, <span class="string">"/**/*.js"</span>, <span class="string">"/**/*.jpg"</span>, <span class="string">"/**/*.png"</span>, <span class="string">"/**/*.jpeg"</span>)</span><br><span class="line">                .addPathPatterns(<span class="string">"/register"</span>, <span class="string">"login"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="Spring" scheme="http://yoursite.com/categories/Spring/"/>
    
    
  </entry>
  
  <entry>
    <title>登录模块开发</title>
    <link href="http://yoursite.com/2022/03/14/%E7%89%9B%E5%AE%A2%E8%AE%A8%E8%AE%BA%E5%8C%BA%E9%A1%B9%E7%9B%AE/%E7%99%BB%E5%BD%95%E6%A8%A1%E5%9D%97%E5%BC%80%E5%8F%91/"/>
    <id>http://yoursite.com/2022/03/14/%E7%89%9B%E5%AE%A2%E8%AE%A8%E8%AE%BA%E5%8C%BA%E9%A1%B9%E7%9B%AE/%E7%99%BB%E5%BD%95%E6%A8%A1%E5%9D%97%E5%BC%80%E5%8F%91/</id>
    <published>2022-03-14T10:48:11.000Z</published>
    <updated>2022-03-27T06:05:17.178Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="基本功能"><a href="#基本功能" class="headerlink" title="基本功能"></a>基本功能</h3><ul><li>访问登陆界面</li><li>登录<ul><li>验证账号，密码，验证码</li><li>成功时，生成登陆凭证，返回给客户端</li><li>失败时，跳转回登录页</li></ul></li><li>退出<ul><li>将登陆凭证改为失效状态</li><li>跳转回首页</li></ul></li></ul><h4 id="登录"><a href="#登录" class="headerlink" title="登录"></a>登录</h4><ul><li>Service层<ul><li>接收账号密码，在数据库中查找，返回错误信息</li><li>若信息无误，生成登陆凭证，传给Controller层</li></ul></li><li>Controller层<ul><li>接收post请求，验证验证码是否正确</li><li>若验证码正确，将账号密码发送给Service层进行验证</li><li>接受错误信息，传给model</li><li>若无误，跳转回主页（重定向，return “redirect:/index”;）</li></ul></li></ul><h4 id="退出登录"><a href="#退出登录" class="headerlink" title="退出登录"></a>退出登录</h4><ul><li>Service层<ul><li>接收Controller层传来的登陆凭证，修改状态</li></ul></li><li>Controller层<ul><li>接收get请求，退出登录，将登陆凭证传给Controller层</li><li>重定向到登陆界面</li></ul></li></ul><h4 id="拦截器应用"><a href="#拦截器应用" class="headerlink" title="拦截器应用"></a>拦截器应用</h4><ul><li>在请求开始时查询登录用户</li><li>在本次请求中持有用户数据</li><li>在模板视图上显示用户数据</li><li>在请求结束时清理用户数据</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="牛客讨论区项目" scheme="http://yoursite.com/categories/%E7%89%9B%E5%AE%A2%E8%AE%A8%E8%AE%BA%E5%8C%BA%E9%A1%B9%E7%9B%AE/"/>
    
    
  </entry>
  
  <entry>
    <title>21级第二场排位赛题解</title>
    <link href="http://yoursite.com/2022/03/05/ACM/21%E7%BA%A7%E7%AC%AC%E4%BA%8C%E5%9C%BA%E6%8E%92%E4%BD%8D%E8%B5%9B%E9%A2%98%E8%A7%A3/"/>
    <id>http://yoursite.com/2022/03/05/ACM/21%E7%BA%A7%E7%AC%AC%E4%BA%8C%E5%9C%BA%E6%8E%92%E4%BD%8D%E8%B5%9B%E9%A2%98%E8%A7%A3/</id>
    <published>2022-03-05T03:07:15.000Z</published>
    <updated>2022-03-05T07:16:53.723Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h4 id="A-IP-Checking（LightOJ-1354）"><a href="#A-IP-Checking（LightOJ-1354）" class="headerlink" title="A. IP Checking（LightOJ - 1354）"></a>A. IP Checking（LightOJ - 1354）</h4><h5 id="送分题？"><a href="#送分题？" class="headerlink" title="送分题？"></a>送分题？</h5><ul><li>不会有人连二进制转换都不会吧</li></ul><p>参考代码：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">StringSplit</span><span class="params">(<span class="built_in">string</span> str, <span class="keyword">char</span> split, <span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt;&amp; rst)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> tot = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">string</span> str1 = <span class="string">""</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; str.length(); i++) &#123;</span><br><span class="line"><span class="keyword">char</span> c = str[i];</span><br><span class="line"><span class="keyword">if</span>(c != <span class="string">'.'</span>) str1 += c;</span><br><span class="line"><span class="keyword">if</span> (c == <span class="string">'.'</span> || i + <span class="number">1</span> == str.length()) &#123;</span><br><span class="line">rst.push_back(str1);</span><br><span class="line">str1 = <span class="string">""</span>;</span><br><span class="line">tot++;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">    <span class="keyword">int</span> T;</span><br><span class="line">    <span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; T;</span><br><span class="line">    <span class="keyword">while</span> (T--) &#123;</span><br><span class="line">        <span class="built_in">string</span> ipAddress;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; ipAddress;</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt; ipAddressSplit;</span><br><span class="line">        StringSplit(ipAddress, <span class="string">'.'</span>, ipAddressSplit);</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt; ipAddressSplitBinary;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; ipAddress;</span><br><span class="line">        StringSplit(ipAddress, <span class="string">'.'</span>, ipAddressSplitBinary);</span><br><span class="line">        <span class="keyword">bool</span> flag = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">int</span> tot1 = ipAddressSplit[i].length() - <span class="number">1</span>, tot2 = <span class="number">7</span>;</span><br><span class="line">            <span class="keyword">int</span> num1 = <span class="number">0</span>, num2 = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">char</span> c : ipAddressSplit[i]) &#123;</span><br><span class="line">                num1 += (c - <span class="string">'0'</span>) * <span class="built_in">pow</span>(<span class="number">10</span>, tot1--);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">char</span> c : ipAddressSplitBinary[i]) &#123;</span><br><span class="line">                num2 += (c - <span class="string">'0'</span>) * (<span class="number">1</span> &lt;&lt; tot2--);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (num1 != num2) &#123;</span><br><span class="line">                flag = <span class="literal">false</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"Case "</span> &lt;&lt; ++cnt &lt;&lt; <span class="string">": "</span>;</span><br><span class="line">        <span class="keyword">if</span> (flag) <span class="built_in">cout</span> &lt;&lt; <span class="string">"Yes"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">cout</span> &lt;&lt; <span class="string">"No"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="B-Alexey-and-Train（Codeforces-1501A）"><a href="#B-Alexey-and-Train（Codeforces-1501A）" class="headerlink" title="B. Alexey and Train（Codeforces - 1501A）"></a>B. Alexey and Train（Codeforces - 1501A）</h4><h5 id="阅读理解签到题"><a href="#阅读理解签到题" class="headerlink" title="阅读理解签到题"></a>阅读理解签到题</h5><ul><li>每次都是 $2$ 选 $1$，要不等到 $b_i$ ，要不就等待  $ \lceil \dfrac{b_i-a_i}{2} \rceil$ 的时间</li></ul><p>参考代码：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> a[<span class="number">110</span>], b[<span class="number">110</span>], t[<span class="number">110</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">    <span class="keyword">int</span> T;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; T;</span><br><span class="line">    <span class="keyword">while</span> (T--) &#123;</span><br><span class="line">        <span class="keyword">int</span> n;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">        <span class="keyword">long</span> <span class="keyword">long</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; a[i] &gt;&gt; b[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; t[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">            ans += a[i] - b[i - <span class="number">1</span>] + t[i];</span><br><span class="line">            <span class="keyword">if</span> (i != n)ans += (b[i] - a[i] + <span class="number">1</span>) / <span class="number">2</span>;</span><br><span class="line">            <span class="keyword">if</span> (i != n &amp;&amp; ans &lt; b[i]) ans = b[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; ans &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="C-C-（Codeforces-1368A）"><a href="#C-C-（Codeforces-1368A）" class="headerlink" title="C. C+=（Codeforces - 1368A）"></a>C. C+=（Codeforces - 1368A）</h4><h5 id="签到题"><a href="#签到题" class="headerlink" title="签到题"></a>签到题</h5><ul><li><p>每次将小的加上大的，易证这样操作一定是最优的</p></li><li><p>每次一个数一定至少会翻倍，所以暴力模拟的复杂度为 $\log n$，直接模拟即可</p></li></ul><p>参考代码：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">    <span class="keyword">int</span> T;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; T;</span><br><span class="line">    <span class="keyword">while</span> (T--) &#123;</span><br><span class="line">        <span class="keyword">int</span> a, b, n;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; a &gt;&gt; b &gt;&gt; n;</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (a &lt;= n &amp;&amp; b &lt;= n) &#123;</span><br><span class="line">            ans++;</span><br><span class="line">            a &gt;= b ? b += a : a += b;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; ans &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="D-Max-and-Mex（Codeforces-1496B）"><a href="#D-Max-and-Mex（Codeforces-1496B）" class="headerlink" title="D. Max and Mex（Codeforces - 1496B）"></a>D. Max and Mex（Codeforces - 1496B）</h4><h5 id="分类讨论"><a href="#分类讨论" class="headerlink" title="分类讨论"></a>分类讨论</h5><ul><li>如果 $mex(a)&gt;max(a)$，那么每一次都会添加一个 $mex(a)$，之后 $mex(a)$ 和 $max(a)$ 都会加1，所以答案是 $ n+k$ 。</li><li>否则$mex(a)$ 和 $max(a)$ 永远不变，答案最多只会加$1$。</li></ul><p>参考代码：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">100010</span>];</span><br><span class="line"><span class="built_in">map</span>&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt;mp;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">    <span class="keyword">int</span> T;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; T;</span><br><span class="line">    <span class="keyword">while</span> (T--) &#123;</span><br><span class="line">        mp.<span class="built_in">clear</span>();</span><br><span class="line">        <span class="keyword">int</span> n, k;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; n &gt;&gt; k;</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; a[i];</span><br><span class="line">            mp[a[i]]++;</span><br><span class="line">            <span class="keyword">if</span> (mp[a[i]] == <span class="number">1</span>)ans++;</span><br><span class="line">        &#125;</span><br><span class="line">        sort(a + <span class="number">1</span>, a + <span class="number">1</span> + n);</span><br><span class="line">        <span class="keyword">int</span> mex = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">1000000</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!mp[i]) &#123;</span><br><span class="line">                mex = i;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (ans - <span class="number">1</span> == a[n]) &#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; k + n &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">int</span> nxt = (mex + a[n]) / <span class="number">2</span>;</span><br><span class="line">            <span class="keyword">if</span> ((mex + a[n]) % <span class="number">2</span>)nxt++;</span><br><span class="line">            <span class="keyword">if</span> (!mp[nxt] &amp;&amp; k)ans++;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; ans &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="E-AND-0-Sum-Big（Codeforces-1514B）"><a href="#E-AND-0-Sum-Big（Codeforces-1514B）" class="headerlink" title="E. AND 0, Sum Big（Codeforces - 1514B）"></a>E. AND 0, Sum Big（Codeforces - 1514B）</h4><h5 id="考察对位运算的理解，沾点高中数学"><a href="#考察对位运算的理解，沾点高中数学" class="headerlink" title="考察对位运算的理解，沾点高中数学"></a>考察对位运算的理解，沾点高中数学</h5><ul><li>由于 $and$ 运算对于每一个二进制位都是独立的，所以我们每一位都分开考虑。注意这是大部分位运算题目的解题思想</li><li>$and$ 为 $0$，说明这 $n$ 个数对于单独的一个二进制位来说，至少有一个是 $0$</li><li>要求和最大，说明对于一个二进制位，只有一个数是$0$</li><li>利用乘法原理，容易得出答案</li></ul><p>参考代码：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> T;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; T;</span><br><span class="line"><span class="keyword">while</span> (T--) &#123;</span><br><span class="line"><span class="keyword">int</span> n, k;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; n &gt;&gt; k;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> ans = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= k; i++)ans = ans * n % mod;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; ans &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="F-Constanze’s-Machine（Codeforces-1195C）"><a href="#F-Constanze’s-Machine（Codeforces-1195C）" class="headerlink" title="F. Constanze’s Machine（Codeforces - 1195C）"></a>F. Constanze’s Machine（Codeforces - 1195C）</h4><h5 id="听说有同学不喜欢读题也不喜欢DP？"><a href="#听说有同学不喜欢读题也不喜欢DP？" class="headerlink" title="听说有同学不喜欢读题也不喜欢DP？"></a>听说有同学不喜欢读题也不喜欢DP？</h5><ul><li>考虑动态规划：$f[i][0/1/2]$ 表示选取了编号在 $i$ 及以前的球员，所能得到的身高总和最大值</li><li>其中，第二维的 $0$ 表示编号为 $i$ 的球员一个都不选；$1$ 表示只选上面一个；$2$ 表示只选下面一个。（显然没有上下都选的情况）</li><li>状态转移方程：<ul><li>$f[i][0]=max(f[i−1][0],f[i−1][1],f[i−1][2])$</li><li>$f[i][1]=max(f[i−1][0],f[i−1][2])+h[i][1]$</li><li>$f[i][2]=max(f[i−1][0],f[i−1][1])+h[i][2]$</li></ul></li></ul><p>参考代码：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> h[<span class="number">100005</span>][<span class="number">3</span>];</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> f[<span class="number">100005</span>][<span class="number">3</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) <span class="built_in">cin</span> &gt;&gt; h[i][<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) <span class="built_in">cin</span> &gt;&gt; h[i][<span class="number">2</span>];</span><br><span class="line">    f[<span class="number">1</span>][<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">    f[<span class="number">1</span>][<span class="number">1</span>] = h[<span class="number">1</span>][<span class="number">1</span>];</span><br><span class="line">    f[<span class="number">1</span>][<span class="number">2</span>] = h[<span class="number">1</span>][<span class="number">2</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        f[i][<span class="number">0</span>] = <span class="built_in">max</span>(f[i - <span class="number">1</span>][<span class="number">0</span>], <span class="built_in">max</span>(f[i - <span class="number">1</span>][<span class="number">1</span>], f[i - <span class="number">1</span>][<span class="number">2</span>]));</span><br><span class="line">        f[i][<span class="number">1</span>] = <span class="built_in">max</span>(f[i - <span class="number">1</span>][<span class="number">0</span>], f[i - <span class="number">1</span>][<span class="number">2</span>]) + h[i][<span class="number">1</span>];</span><br><span class="line">        f[i][<span class="number">2</span>] = <span class="built_in">max</span>(f[i - <span class="number">1</span>][<span class="number">0</span>], f[i - <span class="number">1</span>][<span class="number">1</span>]) + h[i][<span class="number">2</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="built_in">max</span>(f[n][<span class="number">0</span>], <span class="built_in">max</span>(f[n][<span class="number">1</span>], f[n][<span class="number">2</span>]));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="G-Pair-of-Topics（Codeforces-1324D）"><a href="#G-Pair-of-Topics（Codeforces-1324D）" class="headerlink" title="G. Pair of Topics（Codeforces - 1324D）"></a>G. Pair of Topics（Codeforces - 1324D）</h4><h5 id="解法不唯一，给出二分解法"><a href="#解法不唯一，给出二分解法" class="headerlink" title="解法不唯一，给出二分解法"></a>解法不唯一，给出二分解法</h5><ul><li>设 $c[i]=a[i]-b[i]$，并将其按照从小到大排序</li><li>对于每个 $i$，二分寻找满足条件最小的 $j$，统计答案</li><li>答案要开 $long long$</li></ul><p>参考代码：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">200010</span>], b[<span class="number">200010</span>];</span><br><span class="line"><span class="keyword">int</span> c[<span class="number">200010</span>];</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) <span class="built_in">cin</span> &gt;&gt; a[i];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) <span class="built_in">cin</span> &gt;&gt; b[i];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) c[i] = a[i] - b[i];</span><br><span class="line">sort(c + <span class="number">1</span>, c + <span class="number">1</span> + n);</span><br><span class="line">c[n + <span class="number">1</span>] = <span class="number">2e9</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line"><span class="keyword">int</span> need = -c[i] + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> l = i + <span class="number">1</span>, r = n + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span> (l &lt; r) &#123;</span><br><span class="line"><span class="keyword">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (c[mid] &gt;= need)r = mid;</span><br><span class="line"><span class="keyword">else</span> l = mid + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">ans += (n + <span class="number">1</span> - l);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; ans &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="H-Fox-And-Two-Dots（Codeforces-510B）"><a href="#H-Fox-And-Two-Dots（Codeforces-510B）" class="headerlink" title="H. Fox And Two Dots（Codeforces - 510B）"></a>H. Fox And Two Dots（Codeforces - 510B）</h4><h5 id="题目中的手机游戏链接：https-www-taptap-com-app-2221-hreflang-zh-CN"><a href="#题目中的手机游戏链接：https-www-taptap-com-app-2221-hreflang-zh-CN" class="headerlink" title="题目中的手机游戏链接：https://www.taptap.com/app/2221?hreflang=zh_CN"></a>题目中的手机游戏链接：<a href="https://www.taptap.com/app/2221?hreflang=zh_CN" target="_blank" rel="noopener">https://www.taptap.com/app/2221?hreflang=zh_CN</a></h5><ul><li>题意很简单，连通块找环，注意细节即可</li><li>$DFS$ 或 $BFS$ 均可，这里给出 $DFS$ 写法</li></ul><p>参考代码：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"><span class="keyword">char</span> s[<span class="number">60</span>][<span class="number">60</span>];</span><br><span class="line"><span class="keyword">int</span> check[<span class="number">60</span>][<span class="number">60</span>];</span><br><span class="line"><span class="keyword">char</span> X[] = &#123; <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">-1</span> &#125;;</span><br><span class="line"><span class="keyword">char</span> Y[] = &#123; <span class="number">1</span>, <span class="number">-1</span>, <span class="number">0</span>, <span class="number">0</span> &#125;;</span><br><span class="line"><span class="keyword">bool</span> flag;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> lastx, <span class="keyword">int</span> lasty)</span> </span>&#123;</span><br><span class="line">check[x][y] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++) &#123;</span><br><span class="line"><span class="keyword">int</span> nextx = x + X[i];</span><br><span class="line"><span class="keyword">int</span> nexty = y + Y[i];</span><br><span class="line"><span class="keyword">if</span> (nextx &lt; <span class="number">1</span> || nextx &gt; n || nexty &lt; <span class="number">1</span> || nexty &gt; m) <span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">if</span> (nextx == lastx &amp;&amp; nexty == lasty) <span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">if</span> (s[x][y] != s[nextx][nexty]) <span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">if</span> (check[nextx][nexty]) flag = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">else</span> dfs(nextx, nexty, x, y);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; n &gt;&gt; m;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) <span class="built_in">cin</span> &gt;&gt; s[i] + <span class="number">1</span>;</span><br><span class="line">flag = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= m; j++) &#123;</span><br><span class="line"><span class="keyword">if</span> (flag) <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">if</span> (check[i][j]) <span class="keyword">continue</span>;</span><br><span class="line">dfs(i, j, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (flag) <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (flag) <span class="built_in">cout</span> &lt;&lt; <span class="string">"Yes"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">cout</span> &lt;&lt; <span class="string">"No"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="题解" scheme="http://yoursite.com/categories/%E9%A2%98%E8%A7%A3/"/>
    
    
  </entry>
  
</feed>
